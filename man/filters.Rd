% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filter.R
\name{filters}
\alias{and}
\alias{fbool}
\alias{fbool_}
\alias{filter}
\alias{filters}
\alias{frange}
\alias{frange_}
\alias{ids}
\alias{ids_}
\alias{not}
\alias{or}
\alias{prefix}
\alias{prefix_}
\title{elastic DSL filters}
\usage{
filter(x)

or(x)

and(x)

not(x)

frange(.obj = list(), ..., boost = 1, time_zone = NULL,
  execution = NULL, cache = FALSE)

frange_(.obj = list(), ..., .dots)

fbool(.obj = list(), ...)

fbool_(.obj = list(), ..., .dots)

prefix(.obj = list(), ...)

prefix_(.obj = list(), ..., .dots)

ids(.obj = list(), ...)

ids_(.obj = list(), ..., .dots)
}
\arguments{
\item{x}{Input to various functions}

\item{.obj}{An index object. If nothing passed defaults to all indices, equivalent to
doing e.g., \code{localhost:9200/_search}}

\item{...}{Further args passed on}

\item{boost}{(numeric) Sets the boost value of the query. Default: 1.0}

\item{time_zone}{(character) The time zone}

\item{execution}{(character) See details.}

\item{cache}{(logical) To cache or not.}

\item{.dots}{Further args}
}
\description{
elastic DSL filters
}
\details{
The execution option controls how the range filter internally executes. The execution
option accepts the following values:
\itemize{
 \item index Uses the field's inverted index in order to determine whether documents
 fallwithin the specified range.
 \item fielddata Uses fielddata in order to determine whether documents fall within
 the specified range.
}
}
\examples{
\dontrun{
# DSL filters default to search across all indices
bool(must_not = list(term=list(speaker="KING HENRY IV")))

# At the end either
## glimpse the query to be sent
index("shakespeare") \%>\%
 ids(c(1, 2, 150)) \%>\%
 glimpse()
## or execute
index("shakespeare") \%>\%
 ids(c(1, 2, 150)) \%>\%
 exec()

# boolean operators, use to assign within the filter
index("shakespeare") \%>\% and() \%>\% attributes
index("shakespeare") \%>\% or() \%>\% attributes
index("shakespeare") \%>\% not() \%>\% attributes

# prefix filter
index("shakespeare") \%>\%
 prefix(speaker = "we") \%>\%
 n()

# ids filter
index("shakespeare") \%>\%
 ids(c(1, 2, 150)) \%>\%
 n()

# chain queries/filters together
index("shakespeare") \%>\%
 filter() \%>\%
 or() \%>\%
 prefix(speaker = "we") \%>\%
 ids(c(1, 2, 150)) \%>\%
 exec() \%>\%
 n()

# not filter
index("shakespeare") \%>\%
 filter() \%>\%
 not() \%>\%
 prefix(speaker = "we") \%>\%
 exec()

# bool filter
index("shakespeare") \%>\%
   bool(must_not = list(term=list(speaker="KING HENRY IV"))) \%>\%
   exec
index("shakespeare") \%>\%
   bool(should = list(list(term=list(speech_number=1)))) \%>\%
   exec

# range filter
index("shakespeare") \%>\%
   range( speech_number <= 5 )
index("gbif") \%>\%
   filter() \%>\%
   range( decimalLatitude <= 40 ) \%>\%
   exec()
index("gbif") \%>\%
   filter() \%>\%
   or() \%>\%
   range(decimalLatitude <= 20) \%>\%
   range(decimalLongitude <= 10) \%>\%
   exec()
}
}

