% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query.R
\name{query}
\alias{bool}
\alias{bool_}
\alias{boosting}
\alias{boosting_}
\alias{common}
\alias{common_}
\alias{geoshape}
\alias{geoshape_}
\alias{query}
\alias{range}
\alias{range_}
\title{The elastic DSL}
\usage{
range(.obj = list(), ..., boost = 1, time_zone = NULL, execution = NULL,
  cache = FALSE)

range_(.obj = list(), ..., .dots)

bool(.obj = list(), ...)

bool_(.obj = list(), ..., .dots)

geoshape(.obj = list(), ..., field = NULL)

geoshape_(.obj = list(), ..., .dots, field = NULL)

boosting(.obj = list(), ..., negative_boost = NULL)

boosting_(.obj = list(), ..., .dots, negative_boost = NULL)

common(.obj = list(), field, query = NULL, cutoff_frequency = NULL,
  low_freq_operator = NULL, minimum_should_match = NULL)

common_(.obj = list(), field, query = NULL, cutoff_frequency = NULL,
  low_freq_operator = NULL, minimum_should_match = NULL)
}
\arguments{
\item{.obj}{An index object. If nothing passed defaults to all indices, equivalent to
doing e.g., \code{localhost:9200/_search}}

\item{...}{Further args passed on}

\item{boost}{Explanation...}

\item{time_zone}{Explanation...}

\item{execution}{Explanation...}

\item{cache}{Explanation...}

\item{.dots}{Explanation...}

\item{field}{Explanation...}

\item{negative_boost}{Explanation...}

\item{query}{Explanation...}

\item{cutoff_frequency}{Explanation...}

\item{low_freq_operator}{Explanation...}

\item{minimum_should_match}{Explanation...}
}
\description{
The elastic DSL
}
\details{
The DSL for \code{elastic} makes it easy to do queries against an Elasticsearch
instance, either local or remote.

The workflow with the DSL:
\enumerate{
 \item Start with the index to use, e.g., \code{index("shakespeare")}
 \item Define queries, e.g., \code{range(speech_number == 5, line_id > 3)}
 \item Execute search, e.g., \code{Search()}
}

Alternatively, if nothing follows a query definition, \code{\link{Search}} is called
to execute the search with the query as given. In a sense, this is essentially like
what \code{dplyr} does.
}
\examples{
\dontrun{
# DSL queries default to search across all indices
bool(must_not = list(term=list(speaker="KING HENRY IV")))

# bool query
bool(must_not = list(term=list(speaker="KING HENRY IV")))
index("shakespeare") \%>\%
   bool(must_not = list(term=list(speaker="KING HENRY IV")))
index("shakespeare") \%>\%
   bool(should = list(list(term=list(speech_number=1))))

# range query
index("shakespeare") \%>\% range( speech_number <= 5 )
index("shakespeare") \%>\% range( speech_number >= 5 )
# index("shakespeare") \%>\% range( speech_number <= c(1,5) ) # doens't work
# index("shakespeare") \%>\% range( speech_number >= c(1,5) ) # doens't work

# geographic query
## point
index("geoshape") \%>\%
   geoshape(field = "location", type = "envelope", coordinates = list(c(-30, 50), c(30, 0)))
# circle and radius
index("geoshape") \%>\%
   geoshape(field = "location", type = "circle", radius = "2000km",
            coordinates = c(-10, 45)) \%>\%
   n()
index("geoshape") \%>\%
   geoshape(field = "location", type = "circle", radius = "5000km",
            coordinates = c(-10, 45)) \%>\%
   n()
# polygon
coords <- list(c(80.0, -20.0), c(-80.0, -20.0), c(-80.0, 60.0), c(40.0, 60.0), c(80.0, -20.0))
index("geoshape") \%>\%
   geoshape(field = "location", type = "polygon", coordinates = coords) \%>\%
   n()

# common query - not working yet
# index("shakespeare") \%>\% common( speech_number <= 5 )
}
}

